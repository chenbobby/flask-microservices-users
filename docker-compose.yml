# Creates containers for each service listed 
#
# 'volume' mounts code into the container. This is usefule in development
#       so that the container updates whenever code changes. Otherwise,
#       you have to rebuild on every code change.
#
# Directory paths in 'build' and 'volume' are relative to this file
#
# To build images, run 'docker-compose build'
#       The first build will take a while but subsequent builds will be
#       faster since Docker caches results of past builds
#
# When built, users-db will send exit code 0 if the container initiated
#       successfully. Postgres will be available on port 5435 on host
#       and on port 5432 services running in other containers

version: '3'

services:

    nginx:
        container_name: nginx
        build: ./nginx/
        restart: always
        ports:
            - 80:80 # Expose ports (HOST:CONTAINER)
        depends_on:
            - users-service
        links:
            - users-service


    users-db:
        container_name: users-db
        build: https://github.com/chenbobby/flask-microservices-users.git#master:project/db
        ports:
            - 5435:5432 # Expose ports (HOST:CONTAINER)
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        healthcheck:
            test: exit 0


    users-service:
        container_name: users-service
        build: https://github.com/chenbobby/flask-microservices-users.git
        volumes:
            - '.:/usr/src/app'
        ports:
            - 5001:5000 # Expose ports (HOST:CONTAINER)
        environment:
            - APP_SETTINGS=project.config.DevelopmentConfig
            - DATABASE_DEV_URL=postgres://postgres:postgres@users-db:5432/users_dev
            - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
        depends_on:
            - users-db
        links:
            - users-db
